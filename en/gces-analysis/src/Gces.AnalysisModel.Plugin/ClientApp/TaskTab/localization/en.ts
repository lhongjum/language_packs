export const dataModelSchedulingEN: LanguageKeyValueMap = {

	// Global
	taskStatusEnabled: 'Enabled',
	taskStatusDisabled: 'Disabled',

	// Tabs
	tasksTabCaption: 'Tasks',
	tasksTabDescription: 'Scheduled tasks for the document',

	historyTabCaption: 'History',
	historyTabDescription: 'Scheduled task execution history',

	// Tasks Tab
	tasksTabHeader: 'Scheduled Tasks',
	tasksTabNoTasks: 'There are no scheduled tasks for this document',
	tasksTabBtnAddTask: 'Add Task',

	// Task Item
	taskItemRunBtnTitle: 'Run Task',
	taskItemMenuBtnTitle: 'Actions',
	taskItemMenuEnableText: 'Enable',
	taskItemMenuEnableTitle: 'Enable Task',
	taskItemMenuDisableText: 'Disable',
	taskItemMenuDisableTitle: 'Disable Task',
	taskItemMenuEditText: 'Edit',
	taskItemMenuEditTitle: 'Edit Task',
	taskItemMenuDeleteText: 'Delete',
	taskItemMenuDeleteTitle: 'Delete Task',
	taskItemMenuDuplicateText: 'Duplicate',
	taskItemMenuDuplicateTitle: 'Duplicate Task',
	taskItemTextNextRun: 'Next run:',
	taskItemTextManually: 'Manually',
	taskItemTextNever: 'Never',
	taskDuplicateSuffix: '-Copy',

	// Task Editor
	taskNoScheduleTemplateTip: 'no schedule template',
	taskEditorCloneFromTemplate: 'Use Template',
	taskEditorChooseTemplate: 'Choose Template',
	taskEditorTemplateHasBeenDeleted: 'Template has been deleted',
	taskEditorHeaderDetails: 'Details',
	taskEditorInputPlaceholderDescription: 'Task description',
	taskEditorLabelTaskType: 'Task Type',
	taskEditorRefreshTask: 'Refresh',
	taskEditorCleanupTask: 'Cleanup',
	taskEditorLabelDateUpdateMode: 'Data Update Mode',
	taskEditorExecutionOverride: 'Override',
	taskEditorExecutionIncrementalUpdate: 'Incremental Update',
	taskEditorLabelExecution: 'Execution',
	taskEditorExecutionManual: 'Manual',
	taskEditorExecutionOneTime: 'One-Time',
	taskEditorExecutionScheduled: 'Scheduled',
	taskEditorCleanupExpiryPeriod: 'Expiry Period',
	taskEditorLabelStart: 'Start',
	taskEditorBtnCreateText: 'Create Task',
	taskEditorBtnUpdateText: 'Update Task',
	taskEditorBtnCancelText: 'Cancel',
	taskEditorLabelMail: 'Email Notification',
	taskEditorLabelMailLabel: 'Please enter email notification',
	taskEditorLabelMailTooltip: 'Send the failure message to the specified mailbox when the task execute fail',
	taskEditorMailLabelInvalidDomainTip: 'Invalid Email Domain',
	taskEditorEmailFormatError: 'Email format is invalid',
	taskEditorDescriptionError: 'Task description should not be empty',
	searchNoResult: 'no items',
	checkNoResult: 'no items',
	entityContainsTaskTip: 'A refresh task already exists for this entity',
	addEntities: 'Add entities',
	showEntities: 'Show entities',
	search: 'search',
	items: 'items',
	invalidItems: 'invalid items',
	entityNotFound: 'Entity can not find in the data Model',
	taskEditorEntities: 'Entities',
	entityEditorButtonOK: 'OK',
	entityEditorButtonCancel: 'Cancel',
	// Expiry Time Unit
	taskEditorExpiryTimeUnit_Hour: 'Hours',
	taskEditorExpiryTimeUnit_Day: 'Days',
	taskEditorExpiryTimeUnit_Week: 'Weeks',
	taskEditorExpiryTimeUnit_Month: 'Months',
	taskEditorExpiryTimeUnit_Year: 'Years',
	// Recurrence Editor
	recEditorHeaderRepeat: 'Repeat',
	recEditorLabelStart: 'Start',
	recEditorLabelEnd: 'End',
	recEditorPlaceholderNoEndDate: 'No End Date',
	recEditorDailyEditor: 'Daily',
	recEditorWeeklyEditor: 'Weekly',
	recEditorMonthlyEditor: 'Monthly',

	// Daily Editor
	dailyEditorTextAt: 'At {{time}}',
	dailyEditorTextEvery: 'Every',
	dailyEditorHoursTextUnits: 'hour(s)',
	dailyEditorMinutesTextUnits: 'minute(s)',
	dailyEditorSecondsTextUnits: 'second(s)',

	// Weekly Editor
	weeklyEditorTextEvery: 'Every',
	weeklyEditorTextUnits: 'week(s)',

	// Monthly Editor
	monthlyEditorTextEvery: 'Every',
	monthlyEditorTextUnits: 'month(s)',
	monthlyEditorTextOnDay: 'On day',
	monthlyEditorTextOnDayUnits: '',
	monthlyEditorTextOnTheLast: 'On the last',
	monthlyEditorTextOnTheFirst: 'On the first',
	monthlyEditorTextLastDay: 'Day',
	monthlyEditorTextLastWeekday: 'Weekday',

	// SAGA: enable/disable task
	sagaTextErrorUpdatingTaskList: 'Error updating task list',
	sagaTextErrorGettingTaskHistory: 'Error getting task history',
	sagaTextErrorUpdatingHistory: 'Error updating history list',

	sagaTextErrorCreatingTask: 'Task was NOT created',
	sagaTextErrorUpdatingTask: 'Task was NOT updated',
	sagaTextErrorDeletingTask: 'Task was NOT deleted',
	sagaTextErrorStartingTask: 'Task was NOT started',
	sagaTextErrorDuplicatingTask: 'Task was not duplicated',
	sagaToggleNotification: 'Task is now {{status, lowercase}}',

	sagaTextErrorGetDataset: 'Error loading dataset',

	sagaFailed: 'Scheduling Plugin: Unknown Error',

	// AppMsg
	selectTaskFailInformType: 'Notification Type',
	Email: 'Email',
	AppMsg: 'Application Message',
	appMsgProvider: 'Application Message Provider',
	WeChat4Work: 'Enterprise WeChat',
	DingTalk: 'Ding Ding',
	delEditorAppMsgLabelRecipients: 'Message Recipients',
	delEditorAppMsgLabelRecipientsToolTip: 'The recipients of the message. Note that all the users in the sub-organizations can also receive the messages if the parent organization is checked',
	appMsgOrgs: 'Organizations',
	appMsgRoles: 'Roles',
	appMsgUsers: 'Users',
	delEditorMenuEmail: 'Email',
	delEditorMenuAppMsg: 'Application Message',

	// Tabs
	'scheduleTasks!name': 'Tasks',
	'scheduleTasks!description': 'Scheduled tasks for the document',

	'scheduleHistory!name': 'History',
	'scheduleHistory!description': 'Scheduled task execution history',

	// Fields info
	searchFieldsPlaceHolder: 'Search fields',

	// data type
	Number: 'Number',
	String: 'String',
	DateTime: 'DateTime',
	Date: 'Date',
	Boolean: 'Boolean',
	Guid: 'Guid',
	Unknown: 'Unsupported',

	// Timezone
	taskExecutingTimezone: 'Executing Timezone',
	'timezone_Etc/GMT+11': '(UTC-11:00) Coordinated Universal Time-11',
	'timezone_America/Adak': '(UTC-10:00) Aleutian Islands',
	'timezone_Pacific/Honolulu': '(UTC-10:00) Hawaii',
	'timezone_Pacific/Marquesas': '(UTC-09:30) Marquesas Islands',
	'timezone_America/Anchorage': '(UTC-09:00) Alaska',
	'timezone_Etc/GMT+9': '(UTC-09:00) Coordinated Universal Time-09',
	'timezone_America/Tijuana': '(UTC-08:00) Baja California',
	'timezone_Etc/GMT+8': '(UTC-08:00) Coordinated Universal Time-08',
	'timezone_America/Los_Angeles': '(UTC-08:00) Pacific Time (US & Canada)',
	'timezone_America/Phoenix': '(UTC-07:00) Arizona',
	'timezone_America/Chihuahua': '(UTC-07:00) Chihuahua, La Paz, Mazatlan',
	'timezone_America/Denver': '(UTC-07:00) Mountain Time (US & Canada)',
	'timezone_America/Guatemala': '(UTC-06:00) Central America',
	'timezone_America/Chicago': '(UTC-06:00) Central Time (US & Canada)',
	'timezone_Pacific/Easter': '(UTC-06:00) Easter Island',
	'timezone_America/Mexico_City': '(UTC-06:00) Guadalajara, Mexico City, Monterrey',
	'timezone_America/Regina': '(UTC-06:00) Saskatchewan',
	'timezone_America/Bogota': '(UTC-05:00) Bogota, Lima, Quito, Rio Branco',
	'timezone_America/Cancun': '(UTC-05:00) Chetumal',
	'timezone_America/New_York': '(UTC-05:00) Eastern Time (US & Canada)',
	'timezone_America/Port-au-Prince': '(UTC-05:00) Haiti',
	'timezone_America/Havana': '(UTC-05:00) Havana',
	'timezone_America/Indiana/Indianapolis': '(UTC-05:00) Indiana (East)',
	'timezone_America/Grand_Turk': '(UTC-05:00) Turks and Caicos',
	'timezone_America/Asuncion': '(UTC-04:00) Asuncion',
	'timezone_America/Halifax': '(UTC-04:00) Atlantic Time (Canada)',
	'timezone_America/Caracas': '(UTC-04:00) Caracas',
	'timezone_America/Cuiaba': '(UTC-04:00) Cuiaba',
	'timezone_America/La_Paz': '(UTC-04:00) Georgetown, La Paz, Manaus, San Juan',
	'timezone_America/Santiago': '(UTC-04:00) Santiago',
	'timezone_America/St_Johns': '(UTC-03:30) Newfoundland',
	'timezone_America/Araguaina': '(UTC-03:00) Araguaina',
	'timezone_America/Sao_Paulo': '(UTC-03:00) Brasilia',
	'timezone_America/Cayenne': '(UTC-03:00) Cayenne, Fortaleza',
	'timezone_America/Argentina/Buenos_Aires': '(UTC-03:00) City of Buenos Aires',
	'timezone_America/Godthab': '(UTC-03:00) Greenland',
	'timezone_America/Montevideo': '(UTC-03:00) Montevideo',
	'timezone_America/Punta_Arenas': '(UTC-03:00) Punta Arenas',
	'timezone_America/Miquelon': '(UTC-03:00) Saint Pierre and Miquelon',
	'timezone_America/Bahia': '(UTC-03:00) Salvador',
	'timezone_Etc/GMT+2': '(UTC-02:00) Coordinated Universal Time-02',
	'timezone_Atlantic/Azores': '(UTC-01:00) Azores',
	'timezone_Atlantic/Cape_Verde': '(UTC-01:00) Cabo Verde Is.',
	'timezone_Etc/UTC': '(UTC) Coordinated Universal Time',
	'timezone_Europe/London': '(UTC+00:00) Dublin, Edinburgh, Lisbon, London',
	'timezone_Atlantic/Reykjavik': '(UTC+00:00) Monrovia, Reykjavik',
	'timezone_Africa/Sao_Tome': '(UTC+00:00) Sao Tome',
	'timezone_Africa/Casablanca': '(UTC+01:00) Casablanca',
	'timezone_Europe/Berlin': '(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna',
	'timezone_Europe/Budapest': '(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague',
	'timezone_Europe/Paris': '(UTC+01:00) Brussels, Copenhagen, Madrid, Paris',
	'timezone_Europe/Warsaw': '(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb',
	'timezone_Africa/Lagos': '(UTC+01:00) West Central Africa',
	'timezone_Asia/Amman': '(UTC+02:00) Amman',
	'timezone_Europe/Bucharest': '(UTC+02:00) Athens, Bucharest',
	'timezone_Asia/Beirut': '(UTC+02:00) Beirut',
	'timezone_Africa/Cairo': '(UTC+02:00) Cairo',
	'timezone_Europe/Chisinau': '(UTC+02:00) Chisinau',
	'timezone_Asia/Damascus': '(UTC+02:00) Damascus',
	'timezone_Asia/Hebron': '(UTC+02:00) Gaza, Hebron',
	'timezone_Africa/Johannesburg': '(UTC+02:00) Harare, Pretoria',
	'timezone_Europe/Kiev': '(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius',
	'timezone_Asia/Jerusalem': '(UTC+02:00) Jerusalem',
	'timezone_Europe/Kaliningrad': '(UTC+02:00) Kaliningrad',
	'timezone_Africa/Khartoum': '(UTC+02:00) Khartoum',
	'timezone_Africa/Tripoli': '(UTC+02:00) Tripoli',
	'timezone_Africa/Windhoek': '(UTC+02:00) Windhoek',
	'timezone_Asia/Baghdad': '(UTC+03:00) Baghdad',
	'timezone_Europe/Istanbul': '(UTC+03:00) Istanbul',
	'timezone_Asia/Riyadh': '(UTC+03:00) Kuwait, Riyadh',
	'timezone_Europe/Minsk': '(UTC+03:00) Minsk',
	'timezone_Europe/Moscow': '(UTC+03:00) Moscow, St. Petersburg',
	'timezone_Africa/Nairobi': '(UTC+03:00) Nairobi',
	'timezone_Asia/Tehran': '(UTC+03:30) Tehran',
	'timezone_Asia/Dubai': '(UTC+04:00) Abu Dhabi, Muscat',
	'timezone_Europe/Astrakhan': '(UTC+04:00) Astrakhan, Ulyanovsk',
	'timezone_Asia/Baku': '(UTC+04:00) Baku',
	'timezone_Europe/Samara': '(UTC+04:00) Izhevsk, Samara',
	'timezone_Indian/Mauritius': '(UTC+04:00) Port Louis',
	'timezone_Europe/Saratov': '(UTC+04:00) Saratov',
	'timezone_Asia/Tbilisi': '(UTC+04:00) Tbilisi',
	'timezone_Europe/Volgograd': '(UTC+04:00) Volgograd',
	'timezone_Asia/Yerevan': '(UTC+04:00) Yerevan',
	'timezone_Asia/Kabul': '(UTC+04:30) Kabul',
	'timezone_Asia/Tashkent': '(UTC+05:00) Ashgabat, Tashkent',
	'timezone_Asia/Yekaterinburg': '(UTC+05:00) Ekaterinburg',
	'timezone_Asia/Karachi': '(UTC+05:00) Islamabad, Karachi',
	'timezone_Asia/Qyzylorda': '(UTC+05:00) Qyzylorda',
	'timezone_Asia/Kolkata': '(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi',
	'timezone_Asia/Colombo': '(UTC+05:30) Sri Jayawardenepura',
	'timezone_Asia/Kathmandu': '(UTC+05:45) Kathmandu',
	'timezone_Asia/Almaty': '(UTC+06:00) Astana',
	'timezone_Asia/Dhaka': '(UTC+06:00) Dhaka',
	'timezone_Asia/Omsk': '(UTC+06:00) Omsk',
	'timezone_Asia/Yangon': '(UTC+06:30) Yangon (Rangoon)',
	'timezone_Asia/Bangkok': '(UTC+07:00) Bangkok, Hanoi, Jakarta',
	'timezone_Asia/Barnaul': '(UTC+07:00) Barnaul, Gorno-Altaysk',
	'timezone_Asia/Hovd': '(UTC+07:00) Hovd',
	'timezone_Asia/Krasnoyarsk': '(UTC+07:00) Krasnoyarsk',
	'timezone_Asia/Novosibirsk': '(UTC+07:00) Novosibirsk',
	'timezone_Asia/Tomsk': '(UTC+07:00) Tomsk',
	'timezone_Asia/Shanghai': '(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi',
	'timezone_Asia/Irkutsk': '(UTC+08:00) Irkutsk',
	'timezone_Asia/Singapore': '(UTC+08:00) Kuala Lumpur, Singapore',
	'timezone_Australia/Perth': '(UTC+08:00) Perth',
	'timezone_Asia/Taipei': '(UTC+08:00) Taipei',
	'timezone_Asia/Ulaanbaatar': '(UTC+08:00) Ulaanbaatar',
	'timezone_Australia/Eucla': '(UTC+08:45) Eucla',
	'timezone_Asia/Chita': '(UTC+09:00) Chita',
	'timezone_Asia/Tokyo': '(UTC+09:00) Osaka, Sapporo, Tokyo',
	'timezone_Asia/Pyongyang': '(UTC+09:00) Pyongyang',
	'timezone_Asia/Seoul': '(UTC+09:00) Seoul',
	'timezone_Asia/Yakutsk': '(UTC+09:00) Yakutsk',
	'timezone_Australia/Adelaide': '(UTC+09:30) Adelaide',
	'timezone_Australia/Darwin': '(UTC+09:30) Darwin',
	'timezone_Australia/Brisbane': '(UTC+10:00) Brisbane',
	'timezone_Australia/Sydney': '(UTC+10:00) Canberra, Melbourne, Sydney',
	'timezone_Pacific/Port_Moresby': '(UTC+10:00) Guam, Port Moresby',
	'timezone_Australia/Hobart': '(UTC+10:00) Hobart',
	'timezone_Asia/Vladivostok': '(UTC+10:00) Vladivostok',
	'timezone_Australia/Lord_Howe': '(UTC+10:30) Lord Howe Island',
	'timezone_Pacific/Bougainville': '(UTC+11:00) Bougainville Island',
	'timezone_Asia/Srednekolymsk': '(UTC+11:00) Chokurdakh',
	'timezone_Asia/Magadan': '(UTC+11:00) Magadan',
	'timezone_Pacific/Norfolk': '(UTC+11:00) Norfolk Island',
	'timezone_Asia/Sakhalin': '(UTC+11:00) Sakhalin',
	'timezone_Pacific/Guadalcanal': '(UTC+11:00) Solomon Is., New Caledonia',
	'timezone_Asia/Kamchatka': '(UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky',
	'timezone_Pacific/Auckland': '(UTC+12:00) Auckland, Wellington',
	'timezone_Etc/GMT-12': '(UTC+12:00) Coordinated Universal Time+12',
	'timezone_Pacific/Fiji': '(UTC+12:00) Fiji',
	'timezone_Pacific/Chatham': '(UTC+12:45) Chatham Islands',
	'timezone_Etc/GMT-13': '(UTC+13:00) Coordinated Universal Time+13',
	'timezone_Pacific/Tongatapu': "(UTC+13:00) Nuku'alofa",
	'timezone_Pacific/Apia': '(UTC+13:00) Samoa',
	'timezone_Pacific/Kiritimati': '(UTC+14:00) Kiritimati Island'
};
